1. 前端 (Frontend) - 《表示层》
	你的角色：在 Postman 中 (这里在VScode里) 操作，相当于扮演了前端开发者或最终用户的角色。
	职责：提供用户界面（UI）和用户体验（UX），收集用户输入（如用户名/密码），并将请求发送到后端。
	在这个流程中：你用 Postman 模拟了前端应用的行为（发送登录请求、存储Token、在请求头中附加Token）。

2. 后端 (Backend) - 《应用层/业务逻辑层》
	这是整个流程的大脑和中枢神经系统，你的大部分操作都在这里。

	你的角色：在控制台运行 yarn start，启动了后端服务器（Node.js + Express）。
	职责：处理业务逻辑：接收前端请求，执行验证、计算、决策等。
	身份认证（Authentication）：验证用户名和密码（你代码中的 /login 路由）。
	签发令牌：验证成功后，生成 JWT Token 并发送给前端（你代码中的 jwt.sign 部分）。
	代理和数据格式化：作为前端和数据库之间的中间人，确保数据的安全和格式正确。

3. 数据层 (Data Layer) - 《数据访问层》
	组成部分：你的 Hasura（GraphQL 引擎） 和 PostgreSQL 数据库。
	职责：数据存储与管理：持久化存储所有数据（用户信息、文章等）。
	数据检索：根据请求高效地查询、插入、更新、删除数据。
	权限控制（Authorization）：Hasura 根据 JWT Token 中的声明（如用户角色）来决定是否允许该请求执行特定的操作（select, insert 等）。这就是你后来配置权限的地方。